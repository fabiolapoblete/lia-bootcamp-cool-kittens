service: yygs
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  profile: fabiola-aws-dev
  region: eu-north-1
  iam:
    role: ${env:AWS_IAM_ROLE}
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizerFunc
        payloadVersion: "2.0"
        enableSimpleResponses: true

plugins: 
  - serverless-webpack
  - serverless-dotenv-plugin

package: 
  individually: true
  exclude:
    - .env.*

functions:
    filterByCategory:
      handler: functions/filterByCategory/index.handler
      events:
        - httpApi:
            path: '/api/menu/{category}'
            method: GET
            authorizer: 
              name: customAuthorizer
    putOrder:
      handler: functions/putOrder/index.handler
      events: 
        - httpApi:
            path: '/api/putOrder'
            method: POST
            authorizer: 
              name: customAuthorizer
    getSingleOrder:
      handler: functions/getSingleOrder/index.handler
      events: 
        - httpApi:
            path: '/api/order/{orderNr}'
            method: GET
            authorizer: 
              name: customAuthorizer
    filterOrders:
      handler: functions/filterOrders/index.handler
      events: 
        - httpApi:
            path: '/api/filterOrders/{status}'
            method: GET
            authorizer: 
              name: customAuthorizer
    updateOrder:
      handler: functions/updateOrder/index.handler
      events:
        - httpApi: 
            path: "/api/updateOrder"
            method: POST
            authorizer: 
              name: customAuthorizer

    authorizerFunc:
      handler: functions/authorizer/index.handler

resources:
  Resources:
    yygsMenu:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:AWS_TABLE_MENU}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: title
            AttributeType: S
          - AttributeName: category
            AttributeType: S
        KeySchema:
          - AttributeName: id 
            KeyType: HASH
          - AttributeName: title
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: 'filterByCategory'
            KeySchema:
              - AttributeName: category
                KeyType: HASH
            Projection: 
              ProjectionType: ALL
    yygsOrders:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:AWS_TABLE_ORDERS}
        AttributeDefinitions:
          - AttributeName: orderNr
            AttributeType: S
          - AttributeName: orderStatus
            AttributeType: S
          - AttributeName: timeStamp
            AttributeType: S
        KeySchema:
         - AttributeName: orderNr
           KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: 'filterByStatus'
            KeySchema:
              - AttributeName: orderStatus
                KeyType: HASH
              - AttributeName: timeStamp
                KeyType: RANGE  
            Projection:
              ProjectionType: ALL